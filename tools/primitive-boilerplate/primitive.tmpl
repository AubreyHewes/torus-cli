package primitive
// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import "encoding/json"

{{range .Types}}
// MarshalJSON implements the json.Marshaler interface for {{.Name}}.
func (t *{{.Name}}) MarshalJSON() ([]byte, error) {
	var ob []byte
	var err error
	b := []byte{'{'}

	{{range $i, $_ := .Fields}}
		{{if $i}}b=append(b, ','){{end}}
		b = append(b, []byte(`"{{.Name}}":`)...)
		ob, err = json.Marshal(t.{{.Field}})
		if err != nil {
			return nil, err
		}
		b = append(b, ob...)
	{{end}}
	b = append(b, '}')

	return b, nil
}

{{if .Byte}}
// Type returns the enumerated byte representation of {{.Name}}.
func (t *{{.Name}}) Type() byte {
	return {{.Byte}}
}
{{end}}
{{end}}
