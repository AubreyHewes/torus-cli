package crypto
// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"context"

	"github.com/manifoldco/torus-cli/identity"
	"github.com/manifoldco/torus-cli/envelope"
	"github.com/manifoldco/torus-cli/primitive"
)

{{ range $b, $ts := . -}}
{{- range $ts -}}
// Signed{{.Name}} returns a {{.Name}}Envelope that is signed, and includes
// a tamper-proof ID.
func (e *Engine) Signed{{.Name}}(ctx context.Context, body *primitive.{{.Name}},
sigID *identity.ID, sigKP *SignatureKeyPair) (*envelope.{{.Name}}, error) {
	id, sig, err := e.signAndID(ctx, body, sigID, sigKP)
	if err != nil {
		return nil, err
	}

	return &envelope.{{.Name}}{
		ID:        id,
		Version:   uint8(body.Version()),
		Body:      body,
		Signature: *sig,
	}, nil
}
{{end }}
{{end }}
